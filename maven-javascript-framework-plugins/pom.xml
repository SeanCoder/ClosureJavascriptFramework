<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.jlgrock.javascript-framework</groupId>
	<artifactId>maven-javascript-framework-plugins</artifactId>
	<version>1.10.1</version>
	<packaging>pom</packaging>
	<name>JavaScript Framework</name>
	<description>A compilation of javascript plugins written for the explicit purpose to work well with the Google Closure Compiler and the Google Closure Library</description>
	<url>https://github.com/jlgrock/JavascriptFramework</url>

	<properties>
		<github.project.name>ClosureJavascriptFramework</github.project.name>
		<maven.version>3.0.1</maven.version>
		<maven.project.version>3.0-alpha-2</maven.project.version>
		<maven-checkstyle-plugin.version>2.7</maven-checkstyle-plugin.version>
		<maven-javadoc-plugin.version>2.8</maven-javadoc-plugin.version>
		<maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
		<maven-surefire-plugin.version>2.10</maven-surefire-plugin.version>
		<maven-pmd-plugin.version>2.5</maven-pmd-plugin.version>
		<maven-plugin-plugin.version>2.9</maven-plugin-plugin.version>
		<maven-project-info-reports-plugin.version>2.3.1</maven-project-info-reports-plugin.version>
		<maven-site-plugin.version>3.0</maven-site-plugin.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven-war-plugin.version>2.1.1</maven-war-plugin.version>
		<cobertura-maven-plugin.version>2.5.1</cobertura-maven-plugin.version>
		<findbugs-maven-plugin.version>2.3.1</findbugs-maven-plugin.version>
		<maven-plugin-api.version>3.0.2</maven-plugin-api.version>
		<maven-report-plugin-api.version>3.0</maven-report-plugin-api.version>
		<maven-report-plugin-impl.version>2.1</maven-report-plugin-impl.version>
		<junit-maven-plugin.version>4.8.2</junit-maven-plugin.version>
		<plexus.utils.version>2.0.1</plexus.utils.version>
		<log4j.version>1.2.16</log4j.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<maven.scm.version>1.3</maven.scm.version>
		<git.wagon.version>0.3.1</git.wagon.version>
		<spock.version>0.5</spock.version>
		<gmaven.groovy.version>1.3</gmaven.groovy.version>
		<groovy.version>1.7</groovy.version>
		<groovy.full.version>1.7.5</groovy.full.version>
		<spock.to.groovy.version>0.4-groovy-1.7</spock.to.groovy.version>
	</properties>

	<dependencies>
		<!-- Groovy/Spock Testing -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.full.version}</version>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>${spock.to.groovy.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Groovy Testing libs for mocking objects that have no interfaces -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>1.2</version>
		</dependency>

	</dependencies>

	<modules>
		<module>maven-utils</module>
		<module>jspreprocessor-maven-plugin</module>
		<module>source-archive-maven-plugin</module>
		<module>source-overlay-maven-plugin</module>
		<module>jsdependency-maven-plugin</module>
		<module>jsar-maven-plugin</module>
		<module>closure-compiler-maven-plugin</module>
		<module>closure-testing-library</module>
		<module>closure-testing-maven-plugin</module>
		<module>closure-testing-report-maven-plugin</module>
		<module>jsdocs-maven-plugin</module>
	</modules>

	<build>
		<!-- used for the transport of artifact between repositories. This requires 
			git to be installed locally. -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-provider-gitexe</artifactId>
				<version>${maven.scm.version}</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-manager-plexus</artifactId>
				<version>${maven.scm.version}</version>
			</extension>
			<extension>
				<groupId>org.kathrynhuxtable.maven.wagon</groupId>
				<artifactId>wagon-gitsite</artifactId>
				<version>${git.wagon.version}</version>
			</extension>
		</extensions>

		<plugins>
			<!-- <plugin> Groovy Testing (only for testing) <groupId>org.codehaus.gmaven</groupId> 
				<artifactId>gmaven-plugin</artifactId> <version>${gmaven.groovy.version}</version> 
				<configuration> <providerSelection>${groovy.version}</providerSelection> 
				</configuration> <dependencies> <dependency> <groupId>org.codehaus.gmaven.runtime</groupId> 
				<artifactId>gmaven-runtime-${groovy.version}</artifactId> <version>${gmaven.groovy.version}</version> 
				<exclusions> <exclusion> <groupId>org.codehaus.groovy</groupId> <artifactId>groovy-all</artifactId> 
				</exclusion> </exclusions> </dependency> <dependency> <groupId>org.codehaus.groovy</groupId> 
				<artifactId>groovy-all</artifactId> <version>${groovy.full.version}</version> 
				</dependency> </dependencies> <executions> <execution> <goals> <goal>generateStubs</goal> 
				<goal>compile</goal> <goal>generateTestStubs</goal> <goal>testCompile</goal> 
				</goals> </execution> </executions> </plugin> -->

			<!-- Source Files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate Java Doc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- To use the plugin goals in your POM or parent POM -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${maven-plugin-plugin.version}</version>
			</plugin>

			<!-- Site Reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${maven-project-info-reports-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${maven-pmd-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${maven-javadoc-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>${maven-jxr-plugin.version}</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>${cobertura-maven-plugin.version}</version>
							<configuration>
								<check>
									<haltOnFailure>true</haltOnFailure>
								</check>
								<formats>
									<format>xml</format>
									<format>html</format>
								</formats>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${maven-checkstyle-plugin.version}</version>
							<configuration>
								<failsOnError>false</failsOnError>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-plugin-plugin</artifactId>
							<version>${maven-plugin-plugin.version}</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
		<!-- To define the plugin version in your parent POM -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>2.9</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<issueManagement>
		<url>https://github.com/jlgrock/JavascriptFramework/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<!-- The main repository. If the library is not in this repository, it should 
		be added (using proxy caching) by the CM to the repository -->
	<repositories>
		<repository>
			<id>localNexus</id>
			<url>http://zeus/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>localNexus</id>
			<url>http://zeus/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>deployRelease</id>
			<distributionManagement>
				<repository>
					<id>local releases</id>
					<name>local nexus</name>
					<url>http://zeus/nexus/content/repositories/releases/</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>deploySnapshot</id>
			<distributionManagement>
				<repository>
					<id>local snapshots</id>
					<name>local nexus</name>
					<url>http://zeus/nexus/content/repositories/snapshots/</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<scm>
		<url>http://github.com/jlgrock/${github.project.name}</url>
		<connection>scm:git:git://github.com/jlgrock/${github.project.name}.git</connection>
		<developerConnection>scm:git:git@github.com:jlgrock/${github.project.name}.git</developerConnection>
	</scm>

	<ciManagement>
		<system>Jenkins</system>
	</ciManagement>

	<distributionManagement>
		<site>
			<id>github-project-site</id>
			<url>gitsite:git@github.com/jlgrock/${github.project.name}.git</url>
		</site>
	</distributionManagement>

	<developers>
		<developer>
			<name>Justin Grant</name>
			<roles>
				<role>Project Lead</role>
				<role>CM</role>
			</roles>
			<timezone>-5</timezone>
			<email>jlgrock@hotmail.com</email>
		</developer>
	</developers>
</project>
